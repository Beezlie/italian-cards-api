{"version":3,"sources":["../src/app.js"],"names":["http","express","cors","consola","routes","socket","handleError","authenticated","config","app","server","Server","use","origin","ALLOWLIST_HOSTS","credentials","json","error","_request","response","_","listen","API_PORT","success","SOCKET_PORT","info"],"mappings":"AAAA,OAAO,kBAAP;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,MAAMC,GAAG,GAAGR,OAAO,EAAnB;AACA,MAAMS,MAAM,GAAG,IAAIV,IAAI,CAACW,MAAT,CAAgBF,GAAhB,CAAf;AACAJ,MAAM,CAACK,MAAD,CAAN;AAEAD,GAAG,CAACG,GAAJ,CAAQV,IAAI,CAAC;AAAEW,EAAAA,MAAM,EAAEL,MAAM,CAACM,eAAjB;AAAkCC,EAAAA,WAAW,EAAE;AAA/C,CAAD,CAAZ;AACAN,GAAG,CAACG,GAAJ,CAAQX,OAAO,CAACe,IAAR,EAAR;AACAP,GAAG,CAACG,GAAJ,CAAQ,QAAR,EAAkBL,aAAlB;AAEAH,MAAM,CAACK,GAAD,CAAN;AAEAA,GAAG,CAACG,GAAJ,CAAQ,CAACK,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,CAA5B,KAAkC;AACtCd,EAAAA,WAAW,CAACW,KAAD,EAAQE,QAAR,CAAX;AACH,CAFD;AAIAV,GAAG,CAACY,MAAJ,CAAWb,MAAM,CAACc,QAAlB,EAA4B,MAAM;AAC9BnB,EAAAA,OAAO,CAACoB,OAAR,CAAiB,yBAAwBf,MAAM,CAACc,QAAS,GAAzD;AACH,CAFD;AAIAZ,MAAM,CAACW,MAAP,CAAcb,MAAM,CAACgB,WAArB,EAAkC,MAAM;AACpCrB,EAAAA,OAAO,CAACoB,OAAR,CAAiB,qBAAoBf,MAAM,CAACgB,WAAY,GAAxD;AACArB,EAAAA,OAAO,CAACsB,IAAR,CAAc,uBAAsBjB,MAAM,CAACM,eAAgB,EAA3D;AACH,CAHD","sourcesContent":["import './database/db.js';\r\nimport http from 'node:http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport consola from 'consola';\r\nimport routes from './routes.js';\r\n\r\nimport { socket } from './socket/index.js';\r\nimport { handleError, authenticated } from './middlewares/index.js';\r\nimport { config } from './config.js';\r\n\r\nconst app = express();\r\nconst server = new http.Server(app);\r\nsocket(server);\r\n\r\napp.use(cors({ origin: config.ALLOWLIST_HOSTS, credentials: true }));\r\napp.use(express.json());\r\napp.use('/users', authenticated);\r\n\r\nroutes(app);\r\n\r\napp.use((error, _request, response, _) => {\r\n    handleError(error, response);\r\n});\r\n\r\napp.listen(config.API_PORT, () => {\r\n    consola.success(`Api listening on port ${config.API_PORT}!`);\r\n});\r\n\r\nserver.listen(config.SOCKET_PORT, () => {\r\n    consola.success(`Listening on port ${config.SOCKET_PORT}!`);\r\n    consola.info(`Api whitelisted for ${config.ALLOWLIST_HOSTS}`);\r\n});"],"file":"app.js"}