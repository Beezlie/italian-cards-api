{"version":3,"sources":["../../src/controller/usersController.js"],"names":["usersModel","usersController","getAll","request","response","_","find","error","users","json","getOne","findById","params","id","user","create","body","update","findOneAndUpdate","new","delete","remove","_id"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,MAAM,EAAE,OAAOC,OAAP,EAAgBC,QAAhB,EAA0BC,CAA1B,KAAgC;AACpCL,IAAAA,UAAU,CAACM,IAAX,CAAgB,EAAhB,EAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClC,UAAID,KAAJ,EAAW;AACP,eAAOH,QAAQ,CAACK,IAAT,CAAcF,KAAd,CAAP;AACH;;AAEDH,MAAAA,QAAQ,CAACK,IAAT,CAAcD,KAAd;AACH,KAND;AAOH,GATmB;AAWpBE,EAAAA,MAAM,EAAE,CAACP,OAAD,EAAUC,QAAV,EAAoBC,CAApB,KAA0B;AAC9BL,IAAAA,UAAU,CAACW,QAAX,CAAoBR,OAAO,CAACS,MAAR,CAAeC,EAAnC,EAAuC,CAACN,KAAD,EAAQO,IAAR,KAAiB;AACpD,UAAIP,KAAJ,EAAW;AACP,eAAOH,QAAQ,CAACK,IAAT,CAAcF,KAAd,CAAP;AACH;;AAEDH,MAAAA,QAAQ,CAACK,IAAT,CAAcK,IAAI,IAAI,EAAtB;AACH,KAND;AAOH,GAnBmB;AAqBpBC,EAAAA,MAAM,EAAE,CAACZ,OAAD,EAAUC,QAAV,EAAoBC,CAApB,KAA0B;AAC9BL,IAAAA,UAAU,CAACe,MAAX,CAAkBZ,OAAO,CAACa,IAA1B,EAAgC,CAACT,KAAD,EAAQO,IAAR,KAAiB;AAC7C,UAAIP,KAAJ,EAAW;AACP,eAAOH,QAAQ,CAACK,IAAT,CAAcF,KAAd,CAAP;AACH;;AAEDH,MAAAA,QAAQ,CAACK,IAAT,CAAcK,IAAd;AACH,KAND;AAOH,GA7BmB;AA+BpBG,EAAAA,MAAM,EAAE,CAACd,OAAD,EAAUC,QAAV,EAAoBC,CAApB,KAA0B;AAC9BL,IAAAA,UAAU,CAACkB,gBAAX,CAA4Bf,OAAO,CAACS,MAAR,CAAeC,EAA3C,EAA+CV,OAAO,CAACa,IAAvD,EAA6D;AAAEG,MAAAA,GAAG,EAAE;AAAP,KAA7D,EAA4E,CAACZ,KAAD,EAAQO,IAAR,KAAiB;AACzF,UAAIP,KAAJ,EAAW;AACP,eAAOH,QAAQ,CAACK,IAAT,CAAcF,KAAd,CAAP;AACH;;AAEDH,MAAAA,QAAQ,CAACK,IAAT,CAAcK,IAAd;AACH,KAND;AAOH,GAvCmB;AAyCpBM,EAAAA,MAAM,EAAE,CAACjB,OAAD,EAAUC,QAAV,EAAoBC,CAApB,KAA0B;AAC9BL,IAAAA,UAAU,CAACqB,MAAX,CAAkB;AAAEC,MAAAA,GAAG,EAAEnB,OAAO,CAACS,MAAR,CAAeC;AAAtB,KAAlB,EAA8C,CAACN,KAAD,EAAQF,CAAR,KAAc;AACxD,UAAIE,KAAJ,EAAW;AACP,eAAOH,QAAQ,CAACK,IAAT,CAAcF,KAAd,CAAP;AACH;AACJ,KAJD;AAKAH,IAAAA,QAAQ,CAACK,IAAT,CAAc,IAAd;AACH;AAhDmB,CAAxB;AAmDA,eAAeR,eAAf","sourcesContent":["import usersModel from '../models/usersModel.js';\r\n\r\nconst usersController = {\r\n    getAll: async (request, response, _) => {\r\n        usersModel.find({}, (error, users) => {\r\n            if (error) {\r\n                return response.json(error);\r\n            }\r\n\r\n            response.json(users);\r\n        });\r\n    },\r\n\r\n    getOne: (request, response, _) => {\r\n        usersModel.findById(request.params.id, (error, user) => {\r\n            if (error) {\r\n                return response.json(error);\r\n            }\r\n\r\n            response.json(user || {});\r\n        });\r\n    },\r\n\r\n    create: (request, response, _) => {\r\n        usersModel.create(request.body, (error, user) => {\r\n            if (error) {\r\n                return response.json(error);\r\n            }\r\n\r\n            response.json(user);\r\n        });\r\n    },\r\n\r\n    update: (request, response, _) => {\r\n        usersModel.findOneAndUpdate(request.params.id, request.body, { new: true }, (error, user) => {\r\n            if (error) {\r\n                return response.json(error);\r\n            }\r\n\r\n            response.json(user);\r\n        });\r\n    },\r\n\r\n    delete: (request, response, _) => {\r\n        usersModel.remove({ _id: request.params.id }, (error, _) => {\r\n            if (error) {\r\n                return response.json(error);\r\n            }\r\n        });\r\n        response.json(true);\r\n    },\r\n};\r\n\r\nexport default usersController;"],"file":"usersController.js"}